{ empty, length, head, tail, init, last, join } where (

typeof = #"typeof.cru",
stringify = #"stringify.cru",
logic = #"logic.cru",
arith = #"arith.cru",
keys = #"keys.cru",
tuple = #"tuple.cru",
tfold = #"tfold.cru",

add = arith.add,
eq = arith.eq,
if = logic.if,

empty = __builtin_sempty,
length = __builtin_slength,
head = __builtin_shead,
tail = __builtin_stail,
init = __builtin_sinit,
last = __builtin_slast,

join c l =
  if (tuple.empty l) "" $
  add (tuple.head l) $ tfold.r nonempty "" (tuple.tail l)
  where (
    nonempty a b = add c $ add a b)

)